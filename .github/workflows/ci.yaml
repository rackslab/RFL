---
name: Automated Tests
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  tests:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tests dependencies
        run: |
          sudo apt-get install -y build-essential python3-dev libldap2-dev libsasl2-dev
          python -m pip install --upgrade pip
          pip install pytest

      # The version of setuptools in python 3.8 environment does not support PEP 639
      # license metadata format. Patch pyproject.toml for this version to restore old
      # deprecated format.
      - name: Patch license metadata (Python 3.8)
        if: ${{ matrix.python-version == '3.8' }}
        run: |
          sed -i 's/^license = \(".*"\)/license = {text = \1}/' pyproject.toml src/*/pyproject.toml

      - name: Install application
        run: |
          pip install src/core src/authentication src/build src/log src/permissions src/settings src/web

      - name: Run tests
        run: pytest --import-mode=importlib

  os_rpm_tests:
    name: OS integration tests (rpm)
    strategy:
      fail-fast: false
      matrix:
        envs:
        - container: rockylinux/rockylinux:8
          epel: 8
          repo: powertools
        - container: rockylinux/rockylinux:9
          epel: 9
          rackslab-repo: el9
          repo: crb
        - container: fedora:42
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.envs.container }}
    steps:
      - uses: actions/checkout@v4

      - name: Enable EPEL repository (Rocky Linux)
        if: ${{ startsWith(matrix.envs.container, 'rockylinux') }}
        run: |
          dnf -y install 'dnf-command(config-manager)'
          dnf config-manager --set-enabled ${{ matrix.envs.repo }}
          dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-${{ matrix.envs.epel }}.noarch.rpm

      - name: Install tests dependencies
        run: |
          dnf -y install \
            python3-flask \
            python3-jwt \
            python3-ldap \
            python3-pip \
            python3-pytest \
            python3-PyYAML \
            python3-tomli

      # Unfortunately, pip and setuptools in RHEL8 do not fully support
      # PEP517 pyproject.toml. As a workaround for this version, the setup.py
      # script provided by RFL.build package is copied and executed.
      - name: Install RFL.build setup wrapper (Rocky Linux 8)
        if: ${{ matrix.envs.container == 'rockylinux/rockylinux:8' }}
        run: |
          cp src/build/rfl/build/scripts/setup src/core/setup.py
          cp src/build/rfl/build/scripts/setup src/authentication/setup.py
          cp src/build/rfl/build/scripts/setup src/build/setup.py
          cp src/build/rfl/build/scripts/setup src/log/setup.py
          cp src/build/rfl/build/scripts/setup src/permissions/setup.py
          cp src/build/rfl/build/scripts/setup src/settings/setup.py
          cp src/build/rfl/build/scripts/setup src/web/setup.py

      - name: Install application
        run: PIP=pip3 bash install.sh

      # Unfortunately, pytest on rocky8 does not support
      # --import-mode=importlib. On this old version, explicitely test all
      # packages individually.
      - name: Run tests (rocky8)
        if: ${{ matrix.envs.container == 'rockylinux/rockylinux:8' }}
        run: |
          pytest-3 src/core
          pytest-3 src/authentication
          pytest-3 src/build
          pytest-3 src/log
          pytest-3 src/permissions
          pytest-3 src/settings
          pytest-3 src/web

      - name: Run tests
        if: ${{ matrix.envs.container != 'rockylinux/rockylinux:8' }}
        run: pytest-3 --import-mode=importlib

  os_deb_tests:
    name: OS integration tests (deb)
    strategy:
      fail-fast: false
      matrix:
        envs:
        - container: debian:stable
        - container: debian:testing
        - container: debian:unstable
        - container: ubuntu:noble
        - container: ubuntu:jammy
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.envs.container }}
    steps:
      - uses: actions/checkout@v4

      - name: Install tests dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt install -y \
            python3-flask \
            python3-jwt \
            python3-ldap \
            python3-pip \
            python3-pytest \
            python3-tomli \
            python3-yaml \
            python3-venv

      # Unfortunately, pip and setuptools in Ubuntu jammy do not fully support
      # PEP517 pyproject.toml. As a workaround for this version, the setup.py
      # script provided by RFL.build package is copied and executed.
      - name: Install RFL.build setup wrapper (Ubuntu Jammy 22.04)
        if: ${{ matrix.envs.container == 'ubuntu:jammy' }}
        run: |
          cp src/build/rfl/build/scripts/setup src/core/setup.py
          cp src/build/rfl/build/scripts/setup src/authentication/setup.py
          cp src/build/rfl/build/scripts/setup src/build/setup.py
          cp src/build/rfl/build/scripts/setup src/log/setup.py
          cp src/build/rfl/build/scripts/setup src/permissions/setup.py
          cp src/build/rfl/build/scripts/setup src/settings/setup.py
          cp src/build/rfl/build/scripts/setup src/web/setup.py

      - name: Install application
        run: |
          python3 -m venv --system-site-packages ~/venv
          EDITABLE=1 PIP=~/venv/bin/pip bash install.sh

      - name: Run tests
        run: ~/venv/bin/python3 -m pytest --import-mode=importlib
